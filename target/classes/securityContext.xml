<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">


    <http pattern="/rest/**" create-session="stateless">
        <intercept-url pattern="/**" access="hasRole('USER')"/>
        <http-basic/>
        <csrf disabled="true"/>
    </http>

    <http>
        <intercept-url pattern="/**" access="hasRole('USER')"/>
        <form-login username-parameter="name"
                    password-parameter="password"/>
        <logout/>
    </http>



    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT name,password,if(blocked=false,1,0) as enabled FROM customers WHERE name=?"
                               authorities-by-username-query="select customers.name,Customer_roles.roles from customers inner join Customer_roles on Customer_roles.Customer_customer_id=customers.customer_id WHERE name=?"/>

            <!--<user-service>-->
                <!--<user name="bob" password="bob" authorities="ROLE_USER,ROLE_ADMIN"/>-->
                <!--<user name="bruce" password="bruce" authorities="ROLE_USER"/>-->
            <!--</user-service>-->
        </authentication-provider>
    </authentication-manager>

</beans:beans>